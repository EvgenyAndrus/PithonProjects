# Последовательность Коллатца
# Напишите функцию collatz(), принимающую один параметр: number.
# Если number — четное число, функция collatz() должна вывести на экран и возвратить значение number // 2.
# Если же number — нечетное число, то функция должна вывести на экран и возвратить значение 3 * number + 1.
# После этого напишите программу, которая предлагает пользователю ввести целое число,
# а затем последовательно вызывает функцию collatz() для этого числа и значений,
# возвращаемых очередным вызовом этой функции, пока на каком-то этапе не будет возвращено значение 1.
# (Любопытно отметить, что, независимо от выбора начального числа, вы все равно рано или поздно получите 1!
# Даже математики не могут объяснить, почему так происходит. Числовая последовательность,
# которую вы исследуете с помощью этой программы, называется последовательностью Коллатца и иногда характеризуется
# как “простейшая из неразрешенных проблем математики”.)
# Не забывайте о том, что возвращаемое функцией input() значение нуждается в преобразовании в целое число
# с помощью функции int(), иначе это будет строковое значение.
# Подсказка.
# Условие четности значения — number % 2 == 0, условие нечетности — number % 2 == 1.
# Проверка корректности ввода
# Добавьте в предыдущий проект инструкции try и except с целью обнаружения ввода пользователем нецелочисленных значений.
# Обычно при передаче функции int() строки, представляющей нецелочисленное значение, как, например,
# при вызове int('puppy'), генерируется ошибка ValueError.
# Поместите в блок except код, который выводит для пользователя сообщение о том, что требуется ввод целого числа.

def collatz(number):
    if number != 1:
        if number % 2 == 0:  # четное
            number = number // 2
            print(number)
            collatz(number)
        elif number % 2 == 1:  # нечетное
            number = 3 * number + 1
            print(number)
            collatz(number)


try:
    num = int(input('введи число: '))
    collatz(num)
except ValueError:
    print('введи целое число')


